<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Reportespiolis</title>
    <link rel="icon" href="favicon.ico" type="image/x-icon">

    <script src="js/plotly-latest.min.js"></script>

    <style>
        :root {
            --color-nivel: #3498db;
            --color-rebalse: #d3a53c;
        }
    </style>
</head>

<body>
    <h1 style="text-align: center; font-family: 'Consolas';">REPORTE HORARIO</h1>
    <h3 style="text-align: center; font-family: 'Courier New';"><!-- ESTAMPATIEMPO --></h3>
    <div>
        <table
            style="margin: 25px auto; border-collapse: collapse; border: 1px solid #eee; border-bottom: 2px solid #3498db; box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.10), 0px 10px 20px rgba(0, 0, 0, 0.05), 0px 20px 20px rgba(0, 0, 0, 0.05), 0px 30px 20px rgba(0, 0, 0, 0.05); font-family: 'consolas';">
            <thead>
                <tr>
                    <th
                        style="color: #000000; border: 1px solid #bebebe; padding: 12px 36px; border-collapse: collapse; text-align: center; background: #3498db; color: #fff; font-size: 16px;">
                        Sitio </th>
                    <th
                        style="color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse; text-align: center; background: #3498db; color: #fff; font-size: 16px;">
                        <!-- HEADER_0 --> <button id="copiar">Copiar</button> </th>
                    <th
                        style="color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse; text-align: center; background: #3498db; color: #fff; font-size: 16px;">
                        <!-- HEADER_1 --></th>
                    <th
                        style="color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse; text-align: center; background: #3498db; color: #fff; font-size: 16px;">
                        <!-- HEADER_2 --></th>
                    <th
                        style="color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse; text-align: center; background: #3498db; color: #fff; font-size: 16px;">
                        <!-- HEADER_3 --></th>
                </tr>
            </thead>
            <tbody>
                <tr style="font-family: 'consolas';">
                    <td
                        style="text-align: left; color: #000000; border: 1px solid #bebebe; padding: 12px 36px; border-collapse: collapse;"></td>
                    <td
                        style="text-align: center; color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse;"></td>
                    <td 
                        style="text-align: center; color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse;"></td>
                    <td 
                        style="text-align: center; color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse;"></td>
                    <td 
                        style="text-align: center; color: #000000; border: 1px solid #bebebe; padding: 12px 12px; border-collapse: collapse;"></td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- Div donde se renderizará el gráfico -->        
    <div id="grafBarras" style="width: 100%; margin: 50px 0px 0px 0px;"></div>
    <div id="grafPie" style="width: 100%; margin: 50px 0px 0px 0px;"></div>
    <div id="grafLineas" style="margin: 50px 0px 0px 0px;"></div>

    <script>
        document.getElementById('copiar').addEventListener('click', function () {

            let textToCopy = '';
            let filas = document.querySelector("tbody").children

            for (let i = 0; i < filas.length; i++) {
                textToCopy += filas[i].childNodes[1].innerText + "," + filas[i].childNodes[3].innerText + '\n';
            }
            textToCopy = textToCopy.trim()

            navigator.clipboard.writeText(textToCopy).then(() => {
                alert('Texto copiado al portapapeles');
            }).catch(err => {
                console.error('Error al copiar el texto: ', err);
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            barras()
            pie()
            lineas()
        })
    </script>

    <script>
        function barras() {

            /* ********************************************
            *********** GRAFICO BARRAS APILADAS ***********
            ******************************************** */

            var sitios = [<!-- SITIOS -->]
            var niveles = [<!-- NIVELES -->]

            var trace10 = {
                x: sitios,
                y: niveles,
                name: 'Nivel',
                type: 'bar',
                marker: {
                    color: getComputedStyle(document.documentElement).getPropertyValue('--color-nivel').trim(),
                },
                text: niveles.map(String),
                textposition: 'auto',
                hoverinfo: 'none',
            };

            var trace11 = {
                x: sitios,
                y: [<!-- COMPLEMENTO -->],
                name: 'Rebalse',
                type: 'bar',
                marker: {
                    color: getComputedStyle(document.documentElement).getPropertyValue('--color-rebalse').trim(),
                    opacity: 0.2
                },
                text: [<!-- REBALSE -->].map(String),
                textposition: 'auto',
                hoverinfo: 'none',
            };

            var datosBarra = [trace10, trace11];

            // Configurar el diseño del gráfico
            var layout = {
                barmode: 'stack',
                title: 'Niveles actuales',

                xaxis: {
                    title: ''
                },
                yaxis: {
                    title: 'Nivel [m]'
                },
                autosize: true,
                font: {
                    family: 'consolas',
                    size: 12
                }
            };
            var configBarras = { responsive: true};

            Plotly.newPlot('grafBarras', datosBarra, layout, configBarras);
        }
    </script>

    <script>
        function pie(){

            /* ********************************************
            *********** GRAFICO TORTA ***********
            ******************************************** */
            
            var data = [{
                "type": "sunburst",
                [tracePie]
                outsidetextfont: {size: 20, color: "#377eb8"},
                "leaf": {opacity: 0.6},
                "marker": {line: {width: 2}},
                "branchvalues": 'total', 
                hovertemplate: "<b>%{label}</b><br>%{value:.2f} m3<extra></extra>",
                marker: {
                    colors: ['rgba(211, 165, 60, 0.3)', "", getComputedStyle(document.documentElement).getPropertyValue('--color-nivel').trim()] 
                },
                textinfo: "label+percent entry",
            }];

            var layout = {
                margin: {l: 0, r: 0, b: 0, t: 25},
                autosize: true,
                title: {
                    text: 'Volúmenes de las reservas en m3',
                    font: {
                        family: 'consolas',
                        size: 17
                    },   
                },
                font: {
                    family: 'consolas',  // Cambia la fuente para el gráfico en general
                    size: 12,
                    color: 'black'  // Cambia el color del texto general
                }   
            };

            var configPie = {responsive: true};

            Plotly.newPlot('grafPie', data, layout, configPie);
        }
    </script>

    <script>
        function lineas() {

            /* ********************************************
            *********** GRAFICO LINEAS ***********
            ******************************************** */
            
            [trace]

           var layout = {
        title: 'Gráfica de Serie Temporal',
        xaxis: {
            title: 'Fecha',
            range: ['24-10-05 13:00:01', '24-10-07 13:24:48'],
            type: 'date'
        },
        yaxis: {
            title: 'Valor',
            range: [0, 5],  // Rango definido
            type: 'linear'
        }
    };

            var configLineas = { responsive: true};

            Plotly.newPlot('grafLineas', datosLinea, layout, configLineas);
        }
    </script>
</body>
</html>